



class ForgivingIndexer:
    def __init__(self, sequence):
        self.sequence = sequence

    def __getitem__(self, index):
        return self.sequence[int(index)]
    
    def __len__(self):
        return len(self.sequence)

class ForgivingIndexer:
    def __init__(self, sequence):
        self.sequence = sequence

    def __getitem__(self, index):
        return self.sequence[int(index)]
    
    def __len__(self):
        return len(self.sequence)


words = ForgivingIndexer(['beegeek', 'pygen', 'stepik', 'python'])

print(len(words[1.9]))

def __getitem__(self, key):
    pass

                  
def __setitem__(self):
    pass

                  
def __getitem__(self, key, value):
    pass

                  
def __setitem__(self, key, value):
    pass

                  
def __setitem__(self, key):
    pass

                  
def __getitem__(self):
    pass

