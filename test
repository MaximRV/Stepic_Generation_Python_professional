



class ForgivingIndexer:
    def __init__(self, sequence):
        self.sequence = sequence

    def __getitem__(self, index):
        return self.sequence[int(index)]
    
    def __len__(self):
        return len(self.sequence)

from contextlib import contextmanager

@contextmanager
def context_manager():
    return 'ContextManager'
    
with context_manager() as manager:
    print(manager)

@contextmanager
def context_manager():
    print('Вход в блок with')
    yield
    print('Выход из блока with')
    
with context_manager() as manager:
    print(manager)

def f(n):
    if n in (1, 2, 3):
        return 1
    else:
        return 2*f(n - 1) + 4*f(n - 3) + f(n - 2)
